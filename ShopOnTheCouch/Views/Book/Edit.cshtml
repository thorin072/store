@using System.Web.Helpers;
@using Newtonsoft.Json;
@model ShopOnTheCouch.Models.Book
@{
    int i = 0;
    var json = @ViewBag.AuthorsList;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumPages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumPages, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumPages, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumStock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumStock, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="authListId">
            @foreach (var auth in Model.Author)
            {<div class="form-group" id="authItemListId">
                    @{i++;}
                    @Html.LabelFor(model => model.Author, "Author " + @i.ToString(), htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="dropdown col-md-10">
                        <input type="text" class="form-control auth@(i)" name="authFullName" placeholder="Enter any author..." onclick="showHints()" onkeyup="showHints()" value="@auth.FullName" id="searchAuth@(i)" data-toggle="dropdown" />
                        <ul class="dropdown-menu" id="@(i)"></ul>
                    </div>

                </div>
            }
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a>Regulator of the number of authors of this book: </a>
                <a class="btn btn-success btn-sm" style="color:black;" onclick="return addField()" href="#">[+]</a>
                <a class="btn btn-danger btn-sm" style="color:black;" onclick="return deleteField(this)" href="#">[—]</a>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
<script type="text/javascript" src="~/Scripts/generating.item.author.js"></script>
<script type="text/javascript" id="dropjs" data-countAuthorNow="@((i).ToString())" src="~/Scripts/dropwork.js"></script>

